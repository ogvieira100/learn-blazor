@rendermode InteractiveAuto
@inject IJSRuntime JSRuntime    

<EditForm Model="@Task" OnValidSubmit="AddTask" >
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            Adicionar Task
        </div>
        <div class="card-body">
            <div class="row mb-3" >
                <div class="col-sm-12" >
                    <select @bind="Task.TaskStatusDescription" class="form-select">
                        <option >Selecione</option>
                        <option value="1">Não Iniciado</option>
                        <option value="2">Em Andamento</option>
                        <option value="3">Completa</option>
                    </select>
                    <ValidationMessage For="@(() => Task.TaskStatusDescription)" />
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-sm-12">
                    <input type="text" class="form-control" @bind="Task.Name" />
                    <ValidationMessage For="@(() => Task.Name)" />
                </div>
            </div>
            <button type="submit"  class="btn btn-primary">
                Adicionar Task
            </button>
        </div>
    </div>
</EditForm>

@code {
    protected override void OnInitialized()
    {
        Task = new Tasks();
    }

    public BlazorApp.Client.Models.Tasks Task { get; set; }

    async Task AddTask()
    {
        if (Tasks.Any(x => x.Name.Equals(Task.Name)))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Tarefa já cadastrada verifique");
            Task = new Tasks();
            return;
        }
        if (int.TryParse(Task.TaskStatusDescription, out int status))
        {
            Task.TaskStatus = (Models.TaskStatus)status;
        }
        Tasks.Add(Task);
        await TaskAdded.InvokeAsync(Task.TaskStatus ?? Models.TaskStatus.NotStarted);
        Task = new Tasks();
    }   

    [Parameter]
    public List<BlazorApp.Client.Models.Tasks> Tasks { get; set; } = new  List<BlazorApp.Client.Models.Tasks>();

    [Parameter]
    public EventCallback<Models.TaskStatus> TaskAdded { get; set; }
}
